#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Online_Hostel_Management_System.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HostelManagement")]
	public partial class HMSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAllottment(Allottment instance);
    partial void UpdateAllottment(Allottment instance);
    partial void DeleteAllottment(Allottment instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertDue(Due instance);
    partial void UpdateDue(Due instance);
    partial void DeleteDue(Due instance);
    partial void InsertEducation(Education instance);
    partial void UpdateEducation(Education instance);
    partial void DeleteEducation(Education instance);
    partial void InsertHostel(Hostel instance);
    partial void UpdateHostel(Hostel instance);
    partial void DeleteHostel(Hostel instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertSession(Session instance);
    partial void UpdateSession(Session instance);
    partial void DeleteSession(Session instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    #endregion
		
		public HMSDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HostelManagementConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HMSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HMSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HMSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HMSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Allottment> Allottments
		{
			get
			{
				return this.GetTable<Allottment>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Due> Dues
		{
			get
			{
				return this.GetTable<Due>();
			}
		}
		
		public System.Data.Linq.Table<Education> Educations
		{
			get
			{
				return this.GetTable<Education>();
			}
		}
		
		public System.Data.Linq.Table<Hostel> Hostels
		{
			get
			{
				return this.GetTable<Hostel>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<Session> Sessions
		{
			get
			{
				return this.GetTable<Session>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<View_Hostel> View_Hostels
		{
			get
			{
				return this.GetTable<View_Hostel>();
			}
		}
		
		public System.Data.Linq.Table<View_User> View_Users
		{
			get
			{
				return this.GetTable<View_User>();
			}
		}
		
		public System.Data.Linq.Table<View_Room> View_Rooms
		{
			get
			{
				return this.GetTable<View_Room>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Allottment")]
	public partial class Allottment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _allottee_id;
		
		private System.Nullable<int> _room_id;
		
		private System.Nullable<decimal> _std_cnic;
		
		private string _allotte_type;
		
		private System.Nullable<int> _allotte_addedBy;
		
		private System.Nullable<System.DateTime> _time_of_addition;
		
		private string _allotte_activeStatus;
		
		private System.Nullable<int> _hostel_id;
		
		private EntitySet<Due> _Dues;
		
		private EntityRef<Hostel> _Hostel;
		
		private EntityRef<Room> _Room;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onallottee_idChanging(int value);
    partial void Onallottee_idChanged();
    partial void Onroom_idChanging(System.Nullable<int> value);
    partial void Onroom_idChanged();
    partial void Onstd_cnicChanging(System.Nullable<decimal> value);
    partial void Onstd_cnicChanged();
    partial void Onallotte_typeChanging(string value);
    partial void Onallotte_typeChanged();
    partial void Onallotte_addedByChanging(System.Nullable<int> value);
    partial void Onallotte_addedByChanged();
    partial void Ontime_of_additionChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_of_additionChanged();
    partial void Onallotte_activeStatusChanging(string value);
    partial void Onallotte_activeStatusChanged();
    partial void Onhostel_idChanging(System.Nullable<int> value);
    partial void Onhostel_idChanged();
    #endregion
		
		public Allottment()
		{
			this._Dues = new EntitySet<Due>(new Action<Due>(this.attach_Dues), new Action<Due>(this.detach_Dues));
			this._Hostel = default(EntityRef<Hostel>);
			this._Room = default(EntityRef<Room>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_allottee_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int allottee_id
		{
			get
			{
				return this._allottee_id;
			}
			set
			{
				if ((this._allottee_id != value))
				{
					this.Onallottee_idChanging(value);
					this.SendPropertyChanging();
					this._allottee_id = value;
					this.SendPropertyChanged("allottee_id");
					this.Onallottee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_id", DbType="Int")]
		public System.Nullable<int> room_id
		{
			get
			{
				return this._room_id;
			}
			set
			{
				if ((this._room_id != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onroom_idChanging(value);
					this.SendPropertyChanging();
					this._room_id = value;
					this.SendPropertyChanged("room_id");
					this.Onroom_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_cnic", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> std_cnic
		{
			get
			{
				return this._std_cnic;
			}
			set
			{
				if ((this._std_cnic != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstd_cnicChanging(value);
					this.SendPropertyChanging();
					this._std_cnic = value;
					this.SendPropertyChanged("std_cnic");
					this.Onstd_cnicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_allotte_type", DbType="NVarChar(MAX)")]
		public string allotte_type
		{
			get
			{
				return this._allotte_type;
			}
			set
			{
				if ((this._allotte_type != value))
				{
					this.Onallotte_typeChanging(value);
					this.SendPropertyChanging();
					this._allotte_type = value;
					this.SendPropertyChanged("allotte_type");
					this.Onallotte_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_allotte_addedBy", DbType="Int")]
		public System.Nullable<int> allotte_addedBy
		{
			get
			{
				return this._allotte_addedBy;
			}
			set
			{
				if ((this._allotte_addedBy != value))
				{
					this.Onallotte_addedByChanging(value);
					this.SendPropertyChanging();
					this._allotte_addedBy = value;
					this.SendPropertyChanged("allotte_addedBy");
					this.Onallotte_addedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[time-of-addition]", Storage="_time_of_addition", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_of_addition
		{
			get
			{
				return this._time_of_addition;
			}
			set
			{
				if ((this._time_of_addition != value))
				{
					this.Ontime_of_additionChanging(value);
					this.SendPropertyChanging();
					this._time_of_addition = value;
					this.SendPropertyChanged("time_of_addition");
					this.Ontime_of_additionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_allotte_activeStatus", DbType="NVarChar(MAX)")]
		public string allotte_activeStatus
		{
			get
			{
				return this._allotte_activeStatus;
			}
			set
			{
				if ((this._allotte_activeStatus != value))
				{
					this.Onallotte_activeStatusChanging(value);
					this.SendPropertyChanging();
					this._allotte_activeStatus = value;
					this.SendPropertyChanged("allotte_activeStatus");
					this.Onallotte_activeStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_id", DbType="Int")]
		public System.Nullable<int> hostel_id
		{
			get
			{
				return this._hostel_id;
			}
			set
			{
				if ((this._hostel_id != value))
				{
					if (this._Hostel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onhostel_idChanging(value);
					this.SendPropertyChanging();
					this._hostel_id = value;
					this.SendPropertyChanged("hostel_id");
					this.Onhostel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Allottment_Due", Storage="_Dues", ThisKey="allottee_id", OtherKey="allottee_id")]
		public EntitySet<Due> Dues
		{
			get
			{
				return this._Dues;
			}
			set
			{
				this._Dues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hostel_Allottment", Storage="_Hostel", ThisKey="hostel_id", OtherKey="hostel_id", IsForeignKey=true)]
		public Hostel Hostel
		{
			get
			{
				return this._Hostel.Entity;
			}
			set
			{
				Hostel previousValue = this._Hostel.Entity;
				if (((previousValue != value) 
							|| (this._Hostel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hostel.Entity = null;
						previousValue.Allottments.Remove(this);
					}
					this._Hostel.Entity = value;
					if ((value != null))
					{
						value.Allottments.Add(this);
						this._hostel_id = value.hostel_id;
					}
					else
					{
						this._hostel_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Hostel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Allottment", Storage="_Room", ThisKey="room_id", OtherKey="room_id", IsForeignKey=true)]
		public Room Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				Room previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.Allottments.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.Allottments.Add(this);
						this._room_id = value.room_id;
					}
					else
					{
						this._room_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Allottment", Storage="_Student", ThisKey="std_cnic", OtherKey="std_cnic", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Allottments.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Allottments.Add(this);
						this._std_cnic = value.std_cnic;
					}
					else
					{
						this._std_cnic = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dues(Due entity)
		{
			this.SendPropertyChanging();
			entity.Allottment = this;
		}
		
		private void detach_Dues(Due entity)
		{
			this.SendPropertyChanging();
			entity.Allottment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private string _user_name;
		
		private System.Data.Linq.Binary _user_passwd;
		
		private string _user_role;
		
		private System.Nullable<int> _user_addedBy;
		
		private System.Nullable<System.DateTime> _time_of_addition;
		
		private string _user_activeStatus;
		
		private System.Nullable<int> _hostel_id;
		
		private EntitySet<Student> _Students;
		
		private EntityRef<Hostel> _Hostel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onuser_passwdChanging(System.Data.Linq.Binary value);
    partial void Onuser_passwdChanged();
    partial void Onuser_roleChanging(string value);
    partial void Onuser_roleChanged();
    partial void Onuser_addedByChanging(System.Nullable<int> value);
    partial void Onuser_addedByChanged();
    partial void Ontime_of_additionChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_of_additionChanged();
    partial void Onuser_activeStatusChanging(string value);
    partial void Onuser_activeStatusChanged();
    partial void Onhostel_idChanging(System.Nullable<int> value);
    partial void Onhostel_idChanged();
    #endregion
		
		public User()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._Hostel = default(EntityRef<Hostel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(MAX)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_passwd", DbType="Binary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary user_passwd
		{
			get
			{
				return this._user_passwd;
			}
			set
			{
				if ((this._user_passwd != value))
				{
					this.Onuser_passwdChanging(value);
					this.SendPropertyChanging();
					this._user_passwd = value;
					this.SendPropertyChanged("user_passwd");
					this.Onuser_passwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_role", DbType="NVarChar(MAX)")]
		public string user_role
		{
			get
			{
				return this._user_role;
			}
			set
			{
				if ((this._user_role != value))
				{
					this.Onuser_roleChanging(value);
					this.SendPropertyChanging();
					this._user_role = value;
					this.SendPropertyChanged("user_role");
					this.Onuser_roleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_addedBy", DbType="Int")]
		public System.Nullable<int> user_addedBy
		{
			get
			{
				return this._user_addedBy;
			}
			set
			{
				if ((this._user_addedBy != value))
				{
					this.Onuser_addedByChanging(value);
					this.SendPropertyChanging();
					this._user_addedBy = value;
					this.SendPropertyChanged("user_addedBy");
					this.Onuser_addedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_of_addition", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_of_addition
		{
			get
			{
				return this._time_of_addition;
			}
			set
			{
				if ((this._time_of_addition != value))
				{
					this.Ontime_of_additionChanging(value);
					this.SendPropertyChanging();
					this._time_of_addition = value;
					this.SendPropertyChanged("time_of_addition");
					this.Ontime_of_additionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_activeStatus", DbType="NVarChar(MAX)")]
		public string user_activeStatus
		{
			get
			{
				return this._user_activeStatus;
			}
			set
			{
				if ((this._user_activeStatus != value))
				{
					this.Onuser_activeStatusChanging(value);
					this.SendPropertyChanging();
					this._user_activeStatus = value;
					this.SendPropertyChanged("user_activeStatus");
					this.Onuser_activeStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_id", DbType="Int")]
		public System.Nullable<int> hostel_id
		{
			get
			{
				return this._hostel_id;
			}
			set
			{
				if ((this._hostel_id != value))
				{
					if (this._Hostel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onhostel_idChanging(value);
					this.SendPropertyChanging();
					this._hostel_id = value;
					this.SendPropertyChanged("hostel_id");
					this.Onhostel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Student", Storage="_Students", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hostel_User", Storage="_Hostel", ThisKey="hostel_id", OtherKey="hostel_id", IsForeignKey=true)]
		public Hostel Hostel
		{
			get
			{
				return this._Hostel.Entity;
			}
			set
			{
				Hostel previousValue = this._Hostel.Entity;
				if (((previousValue != value) 
							|| (this._Hostel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hostel.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Hostel.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._hostel_id = value.hostel_id;
					}
					else
					{
						this._hostel_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Hostel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dep_id;
		
		private string _dep_name;
		
		private EntitySet<Session> _Sessions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondep_idChanging(int value);
    partial void Ondep_idChanged();
    partial void Ondep_nameChanging(string value);
    partial void Ondep_nameChanged();
    #endregion
		
		public Department()
		{
			this._Sessions = new EntitySet<Session>(new Action<Session>(this.attach_Sessions), new Action<Session>(this.detach_Sessions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dep_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int dep_id
		{
			get
			{
				return this._dep_id;
			}
			set
			{
				if ((this._dep_id != value))
				{
					this.Ondep_idChanging(value);
					this.SendPropertyChanging();
					this._dep_id = value;
					this.SendPropertyChanged("dep_id");
					this.Ondep_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dep_name", DbType="NVarChar(MAX)")]
		public string dep_name
		{
			get
			{
				return this._dep_name;
			}
			set
			{
				if ((this._dep_name != value))
				{
					this.Ondep_nameChanging(value);
					this.SendPropertyChanging();
					this._dep_name = value;
					this.SendPropertyChanged("dep_name");
					this.Ondep_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Session", Storage="_Sessions", ThisKey="dep_id", OtherKey="dep_id")]
		public EntitySet<Session> Sessions
		{
			get
			{
				return this._Sessions;
			}
			set
			{
				this._Sessions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sessions(Session entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Sessions(Session entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dues")]
	public partial class Due : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dues_id;
		
		private string _dues_type;
		
		private System.Nullable<int> _dues_amount;
		
		private string _dues_month;
		
		private System.Nullable<System.DateTime> _dues_lastDate;
		
		private System.Nullable<System.DateTime> _dues_paidDate;
		
		private string _dues_paidStatus;
		
		private string _dues_recipt_no;
		
		private System.Nullable<int> _allottee_id;
		
		private System.Nullable<int> _dues_addedBy;
		
		private System.Nullable<System.DateTime> _time_of_addition;
		
		private EntityRef<Allottment> _Allottment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondues_idChanging(int value);
    partial void Ondues_idChanged();
    partial void Ondues_typeChanging(string value);
    partial void Ondues_typeChanged();
    partial void Ondues_amountChanging(System.Nullable<int> value);
    partial void Ondues_amountChanged();
    partial void Ondues_monthChanging(string value);
    partial void Ondues_monthChanged();
    partial void Ondues_lastDateChanging(System.Nullable<System.DateTime> value);
    partial void Ondues_lastDateChanged();
    partial void Ondues_paidDateChanging(System.Nullable<System.DateTime> value);
    partial void Ondues_paidDateChanged();
    partial void Ondues_paidStatusChanging(string value);
    partial void Ondues_paidStatusChanged();
    partial void Ondues_recipt_noChanging(string value);
    partial void Ondues_recipt_noChanged();
    partial void Onallottee_idChanging(System.Nullable<int> value);
    partial void Onallottee_idChanged();
    partial void Ondues_addedByChanging(System.Nullable<int> value);
    partial void Ondues_addedByChanged();
    partial void Ontime_of_additionChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_of_additionChanged();
    #endregion
		
		public Due()
		{
			this._Allottment = default(EntityRef<Allottment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dues_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int dues_id
		{
			get
			{
				return this._dues_id;
			}
			set
			{
				if ((this._dues_id != value))
				{
					this.Ondues_idChanging(value);
					this.SendPropertyChanging();
					this._dues_id = value;
					this.SendPropertyChanged("dues_id");
					this.Ondues_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dues_type", DbType="NVarChar(MAX)")]
		public string dues_type
		{
			get
			{
				return this._dues_type;
			}
			set
			{
				if ((this._dues_type != value))
				{
					this.Ondues_typeChanging(value);
					this.SendPropertyChanging();
					this._dues_type = value;
					this.SendPropertyChanged("dues_type");
					this.Ondues_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dues_amount", DbType="Int")]
		public System.Nullable<int> dues_amount
		{
			get
			{
				return this._dues_amount;
			}
			set
			{
				if ((this._dues_amount != value))
				{
					this.Ondues_amountChanging(value);
					this.SendPropertyChanging();
					this._dues_amount = value;
					this.SendPropertyChanged("dues_amount");
					this.Ondues_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dues_month", DbType="NVarChar(MAX)")]
		public string dues_month
		{
			get
			{
				return this._dues_month;
			}
			set
			{
				if ((this._dues_month != value))
				{
					this.Ondues_monthChanging(value);
					this.SendPropertyChanging();
					this._dues_month = value;
					this.SendPropertyChanged("dues_month");
					this.Ondues_monthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dues_lastDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> dues_lastDate
		{
			get
			{
				return this._dues_lastDate;
			}
			set
			{
				if ((this._dues_lastDate != value))
				{
					this.Ondues_lastDateChanging(value);
					this.SendPropertyChanging();
					this._dues_lastDate = value;
					this.SendPropertyChanged("dues_lastDate");
					this.Ondues_lastDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dues_paidDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> dues_paidDate
		{
			get
			{
				return this._dues_paidDate;
			}
			set
			{
				if ((this._dues_paidDate != value))
				{
					this.Ondues_paidDateChanging(value);
					this.SendPropertyChanging();
					this._dues_paidDate = value;
					this.SendPropertyChanged("dues_paidDate");
					this.Ondues_paidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dues_paidStatus", DbType="NVarChar(MAX)")]
		public string dues_paidStatus
		{
			get
			{
				return this._dues_paidStatus;
			}
			set
			{
				if ((this._dues_paidStatus != value))
				{
					this.Ondues_paidStatusChanging(value);
					this.SendPropertyChanging();
					this._dues_paidStatus = value;
					this.SendPropertyChanged("dues_paidStatus");
					this.Ondues_paidStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dues_recipt_no", DbType="NVarChar(MAX)")]
		public string dues_recipt_no
		{
			get
			{
				return this._dues_recipt_no;
			}
			set
			{
				if ((this._dues_recipt_no != value))
				{
					this.Ondues_recipt_noChanging(value);
					this.SendPropertyChanging();
					this._dues_recipt_no = value;
					this.SendPropertyChanged("dues_recipt_no");
					this.Ondues_recipt_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_allottee_id", DbType="Int")]
		public System.Nullable<int> allottee_id
		{
			get
			{
				return this._allottee_id;
			}
			set
			{
				if ((this._allottee_id != value))
				{
					if (this._Allottment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onallottee_idChanging(value);
					this.SendPropertyChanging();
					this._allottee_id = value;
					this.SendPropertyChanged("allottee_id");
					this.Onallottee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dues_addedBy", DbType="Int")]
		public System.Nullable<int> dues_addedBy
		{
			get
			{
				return this._dues_addedBy;
			}
			set
			{
				if ((this._dues_addedBy != value))
				{
					this.Ondues_addedByChanging(value);
					this.SendPropertyChanging();
					this._dues_addedBy = value;
					this.SendPropertyChanged("dues_addedBy");
					this.Ondues_addedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_of_addition", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_of_addition
		{
			get
			{
				return this._time_of_addition;
			}
			set
			{
				if ((this._time_of_addition != value))
				{
					this.Ontime_of_additionChanging(value);
					this.SendPropertyChanging();
					this._time_of_addition = value;
					this.SendPropertyChanged("time_of_addition");
					this.Ontime_of_additionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Allottment_Due", Storage="_Allottment", ThisKey="allottee_id", OtherKey="allottee_id", IsForeignKey=true)]
		public Allottment Allottment
		{
			get
			{
				return this._Allottment.Entity;
			}
			set
			{
				Allottment previousValue = this._Allottment.Entity;
				if (((previousValue != value) 
							|| (this._Allottment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Allottment.Entity = null;
						previousValue.Dues.Remove(this);
					}
					this._Allottment.Entity = value;
					if ((value != null))
					{
						value.Dues.Add(this);
						this._allottee_id = value.allottee_id;
					}
					else
					{
						this._allottee_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Allottment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Education")]
	public partial class Education : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _edu_id;
		
		private System.Nullable<decimal> _std_cnic;
		
		private string _edu_degree;
		
		private System.Nullable<int> _edu_marksObt;
		
		private System.Nullable<int> _edu_totalMarks;
		
		private string _edu_board_uni;
		
		private System.Nullable<int> _edu_session;
		
		private System.Nullable<int> _edu_addedBy;
		
		private System.Nullable<System.DateTime> _time_of_addition;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onedu_idChanging(int value);
    partial void Onedu_idChanged();
    partial void Onstd_cnicChanging(System.Nullable<decimal> value);
    partial void Onstd_cnicChanged();
    partial void Onedu_degreeChanging(string value);
    partial void Onedu_degreeChanged();
    partial void Onedu_marksObtChanging(System.Nullable<int> value);
    partial void Onedu_marksObtChanged();
    partial void Onedu_totalMarksChanging(System.Nullable<int> value);
    partial void Onedu_totalMarksChanged();
    partial void Onedu_board_uniChanging(string value);
    partial void Onedu_board_uniChanged();
    partial void Onedu_sessionChanging(System.Nullable<int> value);
    partial void Onedu_sessionChanged();
    partial void Onedu_addedByChanging(System.Nullable<int> value);
    partial void Onedu_addedByChanged();
    partial void Ontime_of_additionChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_of_additionChanged();
    #endregion
		
		public Education()
		{
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edu_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int edu_id
		{
			get
			{
				return this._edu_id;
			}
			set
			{
				if ((this._edu_id != value))
				{
					this.Onedu_idChanging(value);
					this.SendPropertyChanging();
					this._edu_id = value;
					this.SendPropertyChanged("edu_id");
					this.Onedu_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_cnic", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> std_cnic
		{
			get
			{
				return this._std_cnic;
			}
			set
			{
				if ((this._std_cnic != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstd_cnicChanging(value);
					this.SendPropertyChanging();
					this._std_cnic = value;
					this.SendPropertyChanged("std_cnic");
					this.Onstd_cnicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edu_degree", DbType="NVarChar(MAX)")]
		public string edu_degree
		{
			get
			{
				return this._edu_degree;
			}
			set
			{
				if ((this._edu_degree != value))
				{
					this.Onedu_degreeChanging(value);
					this.SendPropertyChanging();
					this._edu_degree = value;
					this.SendPropertyChanged("edu_degree");
					this.Onedu_degreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edu_marksObt", DbType="Int")]
		public System.Nullable<int> edu_marksObt
		{
			get
			{
				return this._edu_marksObt;
			}
			set
			{
				if ((this._edu_marksObt != value))
				{
					this.Onedu_marksObtChanging(value);
					this.SendPropertyChanging();
					this._edu_marksObt = value;
					this.SendPropertyChanged("edu_marksObt");
					this.Onedu_marksObtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edu_totalMarks", DbType="Int")]
		public System.Nullable<int> edu_totalMarks
		{
			get
			{
				return this._edu_totalMarks;
			}
			set
			{
				if ((this._edu_totalMarks != value))
				{
					this.Onedu_totalMarksChanging(value);
					this.SendPropertyChanging();
					this._edu_totalMarks = value;
					this.SendPropertyChanged("edu_totalMarks");
					this.Onedu_totalMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[edu_board/uni]", Storage="_edu_board_uni", DbType="NVarChar(MAX)")]
		public string edu_board_uni
		{
			get
			{
				return this._edu_board_uni;
			}
			set
			{
				if ((this._edu_board_uni != value))
				{
					this.Onedu_board_uniChanging(value);
					this.SendPropertyChanging();
					this._edu_board_uni = value;
					this.SendPropertyChanged("edu_board_uni");
					this.Onedu_board_uniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edu_session", DbType="Int")]
		public System.Nullable<int> edu_session
		{
			get
			{
				return this._edu_session;
			}
			set
			{
				if ((this._edu_session != value))
				{
					this.Onedu_sessionChanging(value);
					this.SendPropertyChanging();
					this._edu_session = value;
					this.SendPropertyChanged("edu_session");
					this.Onedu_sessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edu_addedBy", DbType="Int")]
		public System.Nullable<int> edu_addedBy
		{
			get
			{
				return this._edu_addedBy;
			}
			set
			{
				if ((this._edu_addedBy != value))
				{
					this.Onedu_addedByChanging(value);
					this.SendPropertyChanging();
					this._edu_addedBy = value;
					this.SendPropertyChanged("edu_addedBy");
					this.Onedu_addedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_of_addition", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_of_addition
		{
			get
			{
				return this._time_of_addition;
			}
			set
			{
				if ((this._time_of_addition != value))
				{
					this.Ontime_of_additionChanging(value);
					this.SendPropertyChanging();
					this._time_of_addition = value;
					this.SendPropertyChanged("time_of_addition");
					this.Ontime_of_additionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Education", Storage="_Student", ThisKey="std_cnic", OtherKey="std_cnic", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Educations.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Educations.Add(this);
						this._std_cnic = value.std_cnic;
					}
					else
					{
						this._std_cnic = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hostel")]
	public partial class Hostel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _hostel_id;
		
		private System.Nullable<int> _hostel_no;
		
		private string _hostel_name;
		
		private string _hostel_location;
		
		private string _hostel_type;
		
		private System.Nullable<int> _hostel_roomCount;
		
		private System.Nullable<int> _hostel_addedBy;
		
		private System.Nullable<System.DateTime> _time_of_addition;
		
		private string _hostel_activeStatus;
		
		private EntitySet<Allottment> _Allottments;
		
		private EntitySet<User> _Users;
		
		private EntitySet<Room> _Rooms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onhostel_idChanging(int value);
    partial void Onhostel_idChanged();
    partial void Onhostel_noChanging(System.Nullable<int> value);
    partial void Onhostel_noChanged();
    partial void Onhostel_nameChanging(string value);
    partial void Onhostel_nameChanged();
    partial void Onhostel_locationChanging(string value);
    partial void Onhostel_locationChanged();
    partial void Onhostel_typeChanging(string value);
    partial void Onhostel_typeChanged();
    partial void Onhostel_roomCountChanging(System.Nullable<int> value);
    partial void Onhostel_roomCountChanged();
    partial void Onhostel_addedByChanging(System.Nullable<int> value);
    partial void Onhostel_addedByChanged();
    partial void Ontime_of_additionChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_of_additionChanged();
    partial void Onhostel_activeStatusChanging(string value);
    partial void Onhostel_activeStatusChanged();
    #endregion
		
		public Hostel()
		{
			this._Allottments = new EntitySet<Allottment>(new Action<Allottment>(this.attach_Allottments), new Action<Allottment>(this.detach_Allottments));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._Rooms = new EntitySet<Room>(new Action<Room>(this.attach_Rooms), new Action<Room>(this.detach_Rooms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int hostel_id
		{
			get
			{
				return this._hostel_id;
			}
			set
			{
				if ((this._hostel_id != value))
				{
					this.Onhostel_idChanging(value);
					this.SendPropertyChanging();
					this._hostel_id = value;
					this.SendPropertyChanged("hostel_id");
					this.Onhostel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_no", DbType="Int")]
		public System.Nullable<int> hostel_no
		{
			get
			{
				return this._hostel_no;
			}
			set
			{
				if ((this._hostel_no != value))
				{
					this.Onhostel_noChanging(value);
					this.SendPropertyChanging();
					this._hostel_no = value;
					this.SendPropertyChanged("hostel_no");
					this.Onhostel_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_name", DbType="NVarChar(MAX)")]
		public string hostel_name
		{
			get
			{
				return this._hostel_name;
			}
			set
			{
				if ((this._hostel_name != value))
				{
					this.Onhostel_nameChanging(value);
					this.SendPropertyChanging();
					this._hostel_name = value;
					this.SendPropertyChanged("hostel_name");
					this.Onhostel_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_location", DbType="NVarChar(MAX)")]
		public string hostel_location
		{
			get
			{
				return this._hostel_location;
			}
			set
			{
				if ((this._hostel_location != value))
				{
					this.Onhostel_locationChanging(value);
					this.SendPropertyChanging();
					this._hostel_location = value;
					this.SendPropertyChanged("hostel_location");
					this.Onhostel_locationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_type", DbType="NVarChar(MAX)")]
		public string hostel_type
		{
			get
			{
				return this._hostel_type;
			}
			set
			{
				if ((this._hostel_type != value))
				{
					this.Onhostel_typeChanging(value);
					this.SendPropertyChanging();
					this._hostel_type = value;
					this.SendPropertyChanged("hostel_type");
					this.Onhostel_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_roomCount", DbType="Int")]
		public System.Nullable<int> hostel_roomCount
		{
			get
			{
				return this._hostel_roomCount;
			}
			set
			{
				if ((this._hostel_roomCount != value))
				{
					this.Onhostel_roomCountChanging(value);
					this.SendPropertyChanging();
					this._hostel_roomCount = value;
					this.SendPropertyChanged("hostel_roomCount");
					this.Onhostel_roomCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_addedBy", DbType="Int")]
		public System.Nullable<int> hostel_addedBy
		{
			get
			{
				return this._hostel_addedBy;
			}
			set
			{
				if ((this._hostel_addedBy != value))
				{
					this.Onhostel_addedByChanging(value);
					this.SendPropertyChanging();
					this._hostel_addedBy = value;
					this.SendPropertyChanged("hostel_addedBy");
					this.Onhostel_addedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_of_addition", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_of_addition
		{
			get
			{
				return this._time_of_addition;
			}
			set
			{
				if ((this._time_of_addition != value))
				{
					this.Ontime_of_additionChanging(value);
					this.SendPropertyChanging();
					this._time_of_addition = value;
					this.SendPropertyChanged("time_of_addition");
					this.Ontime_of_additionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_activeStatus", DbType="NVarChar(MAX)")]
		public string hostel_activeStatus
		{
			get
			{
				return this._hostel_activeStatus;
			}
			set
			{
				if ((this._hostel_activeStatus != value))
				{
					this.Onhostel_activeStatusChanging(value);
					this.SendPropertyChanging();
					this._hostel_activeStatus = value;
					this.SendPropertyChanged("hostel_activeStatus");
					this.Onhostel_activeStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hostel_Allottment", Storage="_Allottments", ThisKey="hostel_id", OtherKey="hostel_id")]
		public EntitySet<Allottment> Allottments
		{
			get
			{
				return this._Allottments;
			}
			set
			{
				this._Allottments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hostel_User", Storage="_Users", ThisKey="hostel_id", OtherKey="hostel_id")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hostel_Room", Storage="_Rooms", ThisKey="hostel_id", OtherKey="hostel_id")]
		public EntitySet<Room> Rooms
		{
			get
			{
				return this._Rooms;
			}
			set
			{
				this._Rooms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Allottments(Allottment entity)
		{
			this.SendPropertyChanging();
			entity.Hostel = this;
		}
		
		private void detach_Allottments(Allottment entity)
		{
			this.SendPropertyChanging();
			entity.Hostel = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Hostel = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Hostel = null;
		}
		
		private void attach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.Hostel = this;
		}
		
		private void detach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.Hostel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Room")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _room_id;
		
		private System.Nullable<int> _room_no;
		
		private string _room_type;
		
		private System.Nullable<int> _room_capacity;
		
		private System.Nullable<int> _room_addedBy;
		
		private string _room_status;
		
		private System.Nullable<System.DateTime> _time_of_addition;
		
		private System.Nullable<int> _hostel_id;
		
		private EntitySet<Allottment> _Allottments;
		
		private EntityRef<Hostel> _Hostel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onroom_idChanging(int value);
    partial void Onroom_idChanged();
    partial void Onroom_noChanging(System.Nullable<int> value);
    partial void Onroom_noChanged();
    partial void Onroom_typeChanging(string value);
    partial void Onroom_typeChanged();
    partial void Onroom_capacityChanging(System.Nullable<int> value);
    partial void Onroom_capacityChanged();
    partial void Onroom_addedByChanging(System.Nullable<int> value);
    partial void Onroom_addedByChanged();
    partial void Onroom_statusChanging(string value);
    partial void Onroom_statusChanged();
    partial void Ontime_of_additionChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_of_additionChanged();
    partial void Onhostel_idChanging(System.Nullable<int> value);
    partial void Onhostel_idChanged();
    #endregion
		
		public Room()
		{
			this._Allottments = new EntitySet<Allottment>(new Action<Allottment>(this.attach_Allottments), new Action<Allottment>(this.detach_Allottments));
			this._Hostel = default(EntityRef<Hostel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int room_id
		{
			get
			{
				return this._room_id;
			}
			set
			{
				if ((this._room_id != value))
				{
					this.Onroom_idChanging(value);
					this.SendPropertyChanging();
					this._room_id = value;
					this.SendPropertyChanged("room_id");
					this.Onroom_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_no", DbType="Int")]
		public System.Nullable<int> room_no
		{
			get
			{
				return this._room_no;
			}
			set
			{
				if ((this._room_no != value))
				{
					this.Onroom_noChanging(value);
					this.SendPropertyChanging();
					this._room_no = value;
					this.SendPropertyChanged("room_no");
					this.Onroom_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_type", DbType="NVarChar(MAX)")]
		public string room_type
		{
			get
			{
				return this._room_type;
			}
			set
			{
				if ((this._room_type != value))
				{
					this.Onroom_typeChanging(value);
					this.SendPropertyChanging();
					this._room_type = value;
					this.SendPropertyChanged("room_type");
					this.Onroom_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_capacity", DbType="Int")]
		public System.Nullable<int> room_capacity
		{
			get
			{
				return this._room_capacity;
			}
			set
			{
				if ((this._room_capacity != value))
				{
					this.Onroom_capacityChanging(value);
					this.SendPropertyChanging();
					this._room_capacity = value;
					this.SendPropertyChanged("room_capacity");
					this.Onroom_capacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_addedBy", DbType="Int")]
		public System.Nullable<int> room_addedBy
		{
			get
			{
				return this._room_addedBy;
			}
			set
			{
				if ((this._room_addedBy != value))
				{
					this.Onroom_addedByChanging(value);
					this.SendPropertyChanging();
					this._room_addedBy = value;
					this.SendPropertyChanged("room_addedBy");
					this.Onroom_addedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_status", DbType="NVarChar(MAX)")]
		public string room_status
		{
			get
			{
				return this._room_status;
			}
			set
			{
				if ((this._room_status != value))
				{
					this.Onroom_statusChanging(value);
					this.SendPropertyChanging();
					this._room_status = value;
					this.SendPropertyChanged("room_status");
					this.Onroom_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_of_addition", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_of_addition
		{
			get
			{
				return this._time_of_addition;
			}
			set
			{
				if ((this._time_of_addition != value))
				{
					this.Ontime_of_additionChanging(value);
					this.SendPropertyChanging();
					this._time_of_addition = value;
					this.SendPropertyChanged("time_of_addition");
					this.Ontime_of_additionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_id", DbType="Int")]
		public System.Nullable<int> hostel_id
		{
			get
			{
				return this._hostel_id;
			}
			set
			{
				if ((this._hostel_id != value))
				{
					if (this._Hostel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onhostel_idChanging(value);
					this.SendPropertyChanging();
					this._hostel_id = value;
					this.SendPropertyChanged("hostel_id");
					this.Onhostel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Allottment", Storage="_Allottments", ThisKey="room_id", OtherKey="room_id")]
		public EntitySet<Allottment> Allottments
		{
			get
			{
				return this._Allottments;
			}
			set
			{
				this._Allottments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hostel_Room", Storage="_Hostel", ThisKey="hostel_id", OtherKey="hostel_id", IsForeignKey=true)]
		public Hostel Hostel
		{
			get
			{
				return this._Hostel.Entity;
			}
			set
			{
				Hostel previousValue = this._Hostel.Entity;
				if (((previousValue != value) 
							|| (this._Hostel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hostel.Entity = null;
						previousValue.Rooms.Remove(this);
					}
					this._Hostel.Entity = value;
					if ((value != null))
					{
						value.Rooms.Add(this);
						this._hostel_id = value.hostel_id;
					}
					else
					{
						this._hostel_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Hostel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Allottments(Allottment entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_Allottments(Allottment entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Session")]
	public partial class Session : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _session_id;
		
		private System.Nullable<decimal> _std_cnic;
		
		private System.Nullable<int> _dep_id;
		
		private string _session_rollno;
		
		private string _session_degree;
		
		private System.Nullable<int> _session_batch;
		
		private System.Nullable<System.DateTime> _session_startDate;
		
		private System.Nullable<System.DateTime> _session_endDate;
		
		private string _session_duration;
		
		private System.Nullable<int> _session_addedBy;
		
		private string _session_activeStatus;
		
		private System.Nullable<System.DateTime> _time_of_addition;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsession_idChanging(int value);
    partial void Onsession_idChanged();
    partial void Onstd_cnicChanging(System.Nullable<decimal> value);
    partial void Onstd_cnicChanged();
    partial void Ondep_idChanging(System.Nullable<int> value);
    partial void Ondep_idChanged();
    partial void Onsession_rollnoChanging(string value);
    partial void Onsession_rollnoChanged();
    partial void Onsession_degreeChanging(string value);
    partial void Onsession_degreeChanged();
    partial void Onsession_batchChanging(System.Nullable<int> value);
    partial void Onsession_batchChanged();
    partial void Onsession_startDateChanging(System.Nullable<System.DateTime> value);
    partial void Onsession_startDateChanged();
    partial void Onsession_endDateChanging(System.Nullable<System.DateTime> value);
    partial void Onsession_endDateChanged();
    partial void Onsession_durationChanging(string value);
    partial void Onsession_durationChanged();
    partial void Onsession_addedByChanging(System.Nullable<int> value);
    partial void Onsession_addedByChanged();
    partial void Onsession_activeStatusChanging(string value);
    partial void Onsession_activeStatusChanged();
    partial void Ontime_of_additionChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_of_additionChanged();
    #endregion
		
		public Session()
		{
			this._Department = default(EntityRef<Department>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int session_id
		{
			get
			{
				return this._session_id;
			}
			set
			{
				if ((this._session_id != value))
				{
					this.Onsession_idChanging(value);
					this.SendPropertyChanging();
					this._session_id = value;
					this.SendPropertyChanged("session_id");
					this.Onsession_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_cnic", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> std_cnic
		{
			get
			{
				return this._std_cnic;
			}
			set
			{
				if ((this._std_cnic != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstd_cnicChanging(value);
					this.SendPropertyChanging();
					this._std_cnic = value;
					this.SendPropertyChanged("std_cnic");
					this.Onstd_cnicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dep_id", DbType="Int")]
		public System.Nullable<int> dep_id
		{
			get
			{
				return this._dep_id;
			}
			set
			{
				if ((this._dep_id != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondep_idChanging(value);
					this.SendPropertyChanging();
					this._dep_id = value;
					this.SendPropertyChanged("dep_id");
					this.Ondep_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_rollno", DbType="NVarChar(MAX)")]
		public string session_rollno
		{
			get
			{
				return this._session_rollno;
			}
			set
			{
				if ((this._session_rollno != value))
				{
					this.Onsession_rollnoChanging(value);
					this.SendPropertyChanging();
					this._session_rollno = value;
					this.SendPropertyChanged("session_rollno");
					this.Onsession_rollnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_degree", DbType="NVarChar(MAX)")]
		public string session_degree
		{
			get
			{
				return this._session_degree;
			}
			set
			{
				if ((this._session_degree != value))
				{
					this.Onsession_degreeChanging(value);
					this.SendPropertyChanging();
					this._session_degree = value;
					this.SendPropertyChanged("session_degree");
					this.Onsession_degreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_batch", DbType="Int")]
		public System.Nullable<int> session_batch
		{
			get
			{
				return this._session_batch;
			}
			set
			{
				if ((this._session_batch != value))
				{
					this.Onsession_batchChanging(value);
					this.SendPropertyChanging();
					this._session_batch = value;
					this.SendPropertyChanged("session_batch");
					this.Onsession_batchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_startDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> session_startDate
		{
			get
			{
				return this._session_startDate;
			}
			set
			{
				if ((this._session_startDate != value))
				{
					this.Onsession_startDateChanging(value);
					this.SendPropertyChanging();
					this._session_startDate = value;
					this.SendPropertyChanged("session_startDate");
					this.Onsession_startDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_endDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> session_endDate
		{
			get
			{
				return this._session_endDate;
			}
			set
			{
				if ((this._session_endDate != value))
				{
					this.Onsession_endDateChanging(value);
					this.SendPropertyChanging();
					this._session_endDate = value;
					this.SendPropertyChanged("session_endDate");
					this.Onsession_endDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_duration", DbType="NVarChar(MAX)")]
		public string session_duration
		{
			get
			{
				return this._session_duration;
			}
			set
			{
				if ((this._session_duration != value))
				{
					this.Onsession_durationChanging(value);
					this.SendPropertyChanging();
					this._session_duration = value;
					this.SendPropertyChanged("session_duration");
					this.Onsession_durationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_addedBy", DbType="Int")]
		public System.Nullable<int> session_addedBy
		{
			get
			{
				return this._session_addedBy;
			}
			set
			{
				if ((this._session_addedBy != value))
				{
					this.Onsession_addedByChanging(value);
					this.SendPropertyChanging();
					this._session_addedBy = value;
					this.SendPropertyChanged("session_addedBy");
					this.Onsession_addedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_activeStatus", DbType="NVarChar(MAX)")]
		public string session_activeStatus
		{
			get
			{
				return this._session_activeStatus;
			}
			set
			{
				if ((this._session_activeStatus != value))
				{
					this.Onsession_activeStatusChanging(value);
					this.SendPropertyChanging();
					this._session_activeStatus = value;
					this.SendPropertyChanged("session_activeStatus");
					this.Onsession_activeStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_of_addition", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_of_addition
		{
			get
			{
				return this._time_of_addition;
			}
			set
			{
				if ((this._time_of_addition != value))
				{
					this.Ontime_of_additionChanging(value);
					this.SendPropertyChanging();
					this._time_of_addition = value;
					this.SendPropertyChanged("time_of_addition");
					this.Ontime_of_additionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Session", Storage="_Department", ThisKey="dep_id", OtherKey="dep_id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Sessions.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Sessions.Add(this);
						this._dep_id = value.dep_id;
					}
					else
					{
						this._dep_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Session", Storage="_Student", ThisKey="std_cnic", OtherKey="std_cnic", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Sessions.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Sessions.Add(this);
						this._std_cnic = value.std_cnic;
					}
					else
					{
						this._std_cnic = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _std_cnic;
		
		private string _std_name;
		
		private string _std_fatherName;
		
		private string _std_fatherOccupation;
		
		private System.Nullable<decimal> _std_fatherIncome;
		
		private string _std_presentAddress;
		
		private string _std_permanentAddress;
		
		private System.Nullable<decimal> _std_phone;
		
		private System.Nullable<decimal> _std_parentPhone;
		
		private string _std_district;
		
		private string _std_bloodGroup;
		
		private string _std_HBSAg_report;
		
		private string _std_antiHCV_report;
		
		private string _std_nationality;
		
		private System.Nullable<int> _user_id;
		
		private System.Nullable<int> _std_addedBy;
		
		private System.Nullable<System.DateTime> _time_of_addition;
		
		private string _std_activeStatus;
		
		private EntitySet<Allottment> _Allottments;
		
		private EntitySet<Education> _Educations;
		
		private EntitySet<Session> _Sessions;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstd_cnicChanging(decimal value);
    partial void Onstd_cnicChanged();
    partial void Onstd_nameChanging(string value);
    partial void Onstd_nameChanged();
    partial void Onstd_fatherNameChanging(string value);
    partial void Onstd_fatherNameChanged();
    partial void Onstd_fatherOccupationChanging(string value);
    partial void Onstd_fatherOccupationChanged();
    partial void Onstd_fatherIncomeChanging(System.Nullable<decimal> value);
    partial void Onstd_fatherIncomeChanged();
    partial void Onstd_presentAddressChanging(string value);
    partial void Onstd_presentAddressChanged();
    partial void Onstd_permanentAddressChanging(string value);
    partial void Onstd_permanentAddressChanged();
    partial void Onstd_phoneChanging(System.Nullable<decimal> value);
    partial void Onstd_phoneChanged();
    partial void Onstd_parentPhoneChanging(System.Nullable<decimal> value);
    partial void Onstd_parentPhoneChanged();
    partial void Onstd_districtChanging(string value);
    partial void Onstd_districtChanged();
    partial void Onstd_bloodGroupChanging(string value);
    partial void Onstd_bloodGroupChanged();
    partial void Onstd_HBSAg_reportChanging(string value);
    partial void Onstd_HBSAg_reportChanged();
    partial void Onstd_antiHCV_reportChanging(string value);
    partial void Onstd_antiHCV_reportChanged();
    partial void Onstd_nationalityChanging(string value);
    partial void Onstd_nationalityChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void Onstd_addedByChanging(System.Nullable<int> value);
    partial void Onstd_addedByChanged();
    partial void Ontime_of_additionChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_of_additionChanged();
    partial void Onstd_activeStatusChanging(string value);
    partial void Onstd_activeStatusChanged();
    #endregion
		
		public Student()
		{
			this._Allottments = new EntitySet<Allottment>(new Action<Allottment>(this.attach_Allottments), new Action<Allottment>(this.detach_Allottments));
			this._Educations = new EntitySet<Education>(new Action<Education>(this.attach_Educations), new Action<Education>(this.detach_Educations));
			this._Sessions = new EntitySet<Session>(new Action<Session>(this.attach_Sessions), new Action<Session>(this.detach_Sessions));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_cnic", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal std_cnic
		{
			get
			{
				return this._std_cnic;
			}
			set
			{
				if ((this._std_cnic != value))
				{
					this.Onstd_cnicChanging(value);
					this.SendPropertyChanging();
					this._std_cnic = value;
					this.SendPropertyChanged("std_cnic");
					this.Onstd_cnicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_name", DbType="NVarChar(MAX)")]
		public string std_name
		{
			get
			{
				return this._std_name;
			}
			set
			{
				if ((this._std_name != value))
				{
					this.Onstd_nameChanging(value);
					this.SendPropertyChanging();
					this._std_name = value;
					this.SendPropertyChanged("std_name");
					this.Onstd_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_fatherName", DbType="NVarChar(MAX)")]
		public string std_fatherName
		{
			get
			{
				return this._std_fatherName;
			}
			set
			{
				if ((this._std_fatherName != value))
				{
					this.Onstd_fatherNameChanging(value);
					this.SendPropertyChanging();
					this._std_fatherName = value;
					this.SendPropertyChanged("std_fatherName");
					this.Onstd_fatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_fatherOccupation", DbType="NVarChar(MAX)")]
		public string std_fatherOccupation
		{
			get
			{
				return this._std_fatherOccupation;
			}
			set
			{
				if ((this._std_fatherOccupation != value))
				{
					this.Onstd_fatherOccupationChanging(value);
					this.SendPropertyChanging();
					this._std_fatherOccupation = value;
					this.SendPropertyChanged("std_fatherOccupation");
					this.Onstd_fatherOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_fatherIncome", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> std_fatherIncome
		{
			get
			{
				return this._std_fatherIncome;
			}
			set
			{
				if ((this._std_fatherIncome != value))
				{
					this.Onstd_fatherIncomeChanging(value);
					this.SendPropertyChanging();
					this._std_fatherIncome = value;
					this.SendPropertyChanged("std_fatherIncome");
					this.Onstd_fatherIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_presentAddress", DbType="NVarChar(MAX)")]
		public string std_presentAddress
		{
			get
			{
				return this._std_presentAddress;
			}
			set
			{
				if ((this._std_presentAddress != value))
				{
					this.Onstd_presentAddressChanging(value);
					this.SendPropertyChanging();
					this._std_presentAddress = value;
					this.SendPropertyChanged("std_presentAddress");
					this.Onstd_presentAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_permanentAddress", DbType="NVarChar(MAX)")]
		public string std_permanentAddress
		{
			get
			{
				return this._std_permanentAddress;
			}
			set
			{
				if ((this._std_permanentAddress != value))
				{
					this.Onstd_permanentAddressChanging(value);
					this.SendPropertyChanging();
					this._std_permanentAddress = value;
					this.SendPropertyChanged("std_permanentAddress");
					this.Onstd_permanentAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_phone", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> std_phone
		{
			get
			{
				return this._std_phone;
			}
			set
			{
				if ((this._std_phone != value))
				{
					this.Onstd_phoneChanging(value);
					this.SendPropertyChanging();
					this._std_phone = value;
					this.SendPropertyChanged("std_phone");
					this.Onstd_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_parentPhone", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> std_parentPhone
		{
			get
			{
				return this._std_parentPhone;
			}
			set
			{
				if ((this._std_parentPhone != value))
				{
					this.Onstd_parentPhoneChanging(value);
					this.SendPropertyChanging();
					this._std_parentPhone = value;
					this.SendPropertyChanged("std_parentPhone");
					this.Onstd_parentPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_district", DbType="NVarChar(MAX)")]
		public string std_district
		{
			get
			{
				return this._std_district;
			}
			set
			{
				if ((this._std_district != value))
				{
					this.Onstd_districtChanging(value);
					this.SendPropertyChanging();
					this._std_district = value;
					this.SendPropertyChanged("std_district");
					this.Onstd_districtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_bloodGroup", DbType="NVarChar(MAX)")]
		public string std_bloodGroup
		{
			get
			{
				return this._std_bloodGroup;
			}
			set
			{
				if ((this._std_bloodGroup != value))
				{
					this.Onstd_bloodGroupChanging(value);
					this.SendPropertyChanging();
					this._std_bloodGroup = value;
					this.SendPropertyChanged("std_bloodGroup");
					this.Onstd_bloodGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_HBSAg_report", DbType="NVarChar(MAX)")]
		public string std_HBSAg_report
		{
			get
			{
				return this._std_HBSAg_report;
			}
			set
			{
				if ((this._std_HBSAg_report != value))
				{
					this.Onstd_HBSAg_reportChanging(value);
					this.SendPropertyChanging();
					this._std_HBSAg_report = value;
					this.SendPropertyChanged("std_HBSAg_report");
					this.Onstd_HBSAg_reportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_antiHCV_report", DbType="NVarChar(MAX)")]
		public string std_antiHCV_report
		{
			get
			{
				return this._std_antiHCV_report;
			}
			set
			{
				if ((this._std_antiHCV_report != value))
				{
					this.Onstd_antiHCV_reportChanging(value);
					this.SendPropertyChanging();
					this._std_antiHCV_report = value;
					this.SendPropertyChanged("std_antiHCV_report");
					this.Onstd_antiHCV_reportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_nationality", DbType="NVarChar(MAX)")]
		public string std_nationality
		{
			get
			{
				return this._std_nationality;
			}
			set
			{
				if ((this._std_nationality != value))
				{
					this.Onstd_nationalityChanging(value);
					this.SendPropertyChanging();
					this._std_nationality = value;
					this.SendPropertyChanged("std_nationality");
					this.Onstd_nationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_addedBy", DbType="Int")]
		public System.Nullable<int> std_addedBy
		{
			get
			{
				return this._std_addedBy;
			}
			set
			{
				if ((this._std_addedBy != value))
				{
					this.Onstd_addedByChanging(value);
					this.SendPropertyChanging();
					this._std_addedBy = value;
					this.SendPropertyChanged("std_addedBy");
					this.Onstd_addedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_of_addition", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_of_addition
		{
			get
			{
				return this._time_of_addition;
			}
			set
			{
				if ((this._time_of_addition != value))
				{
					this.Ontime_of_additionChanging(value);
					this.SendPropertyChanging();
					this._time_of_addition = value;
					this.SendPropertyChanged("time_of_addition");
					this.Ontime_of_additionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_activeStatus", DbType="NVarChar(MAX)")]
		public string std_activeStatus
		{
			get
			{
				return this._std_activeStatus;
			}
			set
			{
				if ((this._std_activeStatus != value))
				{
					this.Onstd_activeStatusChanging(value);
					this.SendPropertyChanging();
					this._std_activeStatus = value;
					this.SendPropertyChanged("std_activeStatus");
					this.Onstd_activeStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Allottment", Storage="_Allottments", ThisKey="std_cnic", OtherKey="std_cnic")]
		public EntitySet<Allottment> Allottments
		{
			get
			{
				return this._Allottments;
			}
			set
			{
				this._Allottments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Education", Storage="_Educations", ThisKey="std_cnic", OtherKey="std_cnic")]
		public EntitySet<Education> Educations
		{
			get
			{
				return this._Educations;
			}
			set
			{
				this._Educations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Session", Storage="_Sessions", ThisKey="std_cnic", OtherKey="std_cnic")]
		public EntitySet<Session> Sessions
		{
			get
			{
				return this._Sessions;
			}
			set
			{
				this._Sessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Student", Storage="_User", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Allottments(Allottment entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Allottments(Allottment entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Educations(Education entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Educations(Education entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Sessions(Session entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Sessions(Session entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Hostel")]
	public partial class View_Hostel
	{
		
		private int _hostel_id;
		
		private System.Nullable<int> _hostel_no;
		
		private string _hostel_name;
		
		private string _hostel_location;
		
		private string _hostel_type;
		
		private System.Nullable<System.DateTime> _time_of_addition;
		
		private string _hostel_activeStatus;
		
		private System.Nullable<int> _hostel_addedBy;
		
		private System.Nullable<int> _hostel_roomCount;
		
		private string _user_name;
		
		public View_Hostel()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_id", DbType="Int NOT NULL")]
		public int hostel_id
		{
			get
			{
				return this._hostel_id;
			}
			set
			{
				if ((this._hostel_id != value))
				{
					this._hostel_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_no", DbType="Int")]
		public System.Nullable<int> hostel_no
		{
			get
			{
				return this._hostel_no;
			}
			set
			{
				if ((this._hostel_no != value))
				{
					this._hostel_no = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_name", DbType="NVarChar(MAX)")]
		public string hostel_name
		{
			get
			{
				return this._hostel_name;
			}
			set
			{
				if ((this._hostel_name != value))
				{
					this._hostel_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_location", DbType="NVarChar(MAX)")]
		public string hostel_location
		{
			get
			{
				return this._hostel_location;
			}
			set
			{
				if ((this._hostel_location != value))
				{
					this._hostel_location = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_type", DbType="NVarChar(MAX)")]
		public string hostel_type
		{
			get
			{
				return this._hostel_type;
			}
			set
			{
				if ((this._hostel_type != value))
				{
					this._hostel_type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_of_addition", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_of_addition
		{
			get
			{
				return this._time_of_addition;
			}
			set
			{
				if ((this._time_of_addition != value))
				{
					this._time_of_addition = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_activeStatus", DbType="NVarChar(MAX)")]
		public string hostel_activeStatus
		{
			get
			{
				return this._hostel_activeStatus;
			}
			set
			{
				if ((this._hostel_activeStatus != value))
				{
					this._hostel_activeStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_addedBy", DbType="Int")]
		public System.Nullable<int> hostel_addedBy
		{
			get
			{
				return this._hostel_addedBy;
			}
			set
			{
				if ((this._hostel_addedBy != value))
				{
					this._hostel_addedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_roomCount", DbType="Int")]
		public System.Nullable<int> hostel_roomCount
		{
			get
			{
				return this._hostel_roomCount;
			}
			set
			{
				if ((this._hostel_roomCount != value))
				{
					this._hostel_roomCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(MAX)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this._user_name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Users")]
	public partial class View_User
	{
		
		private int _user_id;
		
		private string _user_name;
		
		private string _user_role;
		
		private System.Nullable<int> _user_addedBy;
		
		private string _user_activeStatus;
		
		private System.Nullable<System.DateTime> _time_of_addition;
		
		private System.Nullable<int> _hostel_id;
		
		private int _USERID;
		
		private string _USERNAME;
		
		public View_User()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this._user_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(MAX)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this._user_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_role", DbType="NVarChar(MAX)")]
		public string user_role
		{
			get
			{
				return this._user_role;
			}
			set
			{
				if ((this._user_role != value))
				{
					this._user_role = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_addedBy", DbType="Int")]
		public System.Nullable<int> user_addedBy
		{
			get
			{
				return this._user_addedBy;
			}
			set
			{
				if ((this._user_addedBy != value))
				{
					this._user_addedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_activeStatus", DbType="NVarChar(MAX)")]
		public string user_activeStatus
		{
			get
			{
				return this._user_activeStatus;
			}
			set
			{
				if ((this._user_activeStatus != value))
				{
					this._user_activeStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_of_addition", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_of_addition
		{
			get
			{
				return this._time_of_addition;
			}
			set
			{
				if ((this._time_of_addition != value))
				{
					this._time_of_addition = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_id", DbType="Int")]
		public System.Nullable<int> hostel_id
		{
			get
			{
				return this._hostel_id;
			}
			set
			{
				if ((this._hostel_id != value))
				{
					this._hostel_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="Int NOT NULL")]
		public int USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this._USERID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="NVarChar(MAX)")]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this._USERNAME = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Rooms")]
	public partial class View_Room
	{
		
		private int _room_id;
		
		private string _room_type;
		
		private System.Nullable<int> _room_capacity;
		
		private string _room_status;
		
		private System.Nullable<System.DateTime> _time_of_addition;
		
		private System.Nullable<int> _hostel_id;
		
		private string _user_name;
		
		public View_Room()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_id", DbType="Int NOT NULL")]
		public int room_id
		{
			get
			{
				return this._room_id;
			}
			set
			{
				if ((this._room_id != value))
				{
					this._room_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_type", DbType="NVarChar(MAX)")]
		public string room_type
		{
			get
			{
				return this._room_type;
			}
			set
			{
				if ((this._room_type != value))
				{
					this._room_type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_capacity", DbType="Int")]
		public System.Nullable<int> room_capacity
		{
			get
			{
				return this._room_capacity;
			}
			set
			{
				if ((this._room_capacity != value))
				{
					this._room_capacity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_status", DbType="NVarChar(MAX)")]
		public string room_status
		{
			get
			{
				return this._room_status;
			}
			set
			{
				if ((this._room_status != value))
				{
					this._room_status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_of_addition", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_of_addition
		{
			get
			{
				return this._time_of_addition;
			}
			set
			{
				if ((this._time_of_addition != value))
				{
					this._time_of_addition = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostel_id", DbType="Int")]
		public System.Nullable<int> hostel_id
		{
			get
			{
				return this._hostel_id;
			}
			set
			{
				if ((this._hostel_id != value))
				{
					this._hostel_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(MAX)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this._user_name = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
